@charset "utf-8"; //解决中文报错

//cfl色系
$upBlue:#033893;
$upBlueAct:#ee7800;
$wRed:#fff;
$pBgGray:#30343a;
$mBgGray:#373c43;
$toolBarBg:#23262a;

//尺寸换算
@media only screen and (min-width:320px){html{font-size:17.07px!important}}
@media only screen and (min-width:360px){html{font-size:19.2px!important}}
@media only screen and (min-width:375px){html{font-size:20px!important}}
@media only screen and (min-width:400px){html{font-size:21.33px!important}}
@media only screen and (min-width:412px){html{font-size:21.97px!important}}
@media only screen and (min-width:413px){html{font-size:22.03px!important}}
@media only screen and (min-width:414px){html{font-size:22.08px!important}}
@media only screen and (min-width:480px){html{font-size:25.6px!important}}
$scale:0.025;
// css3 -webkit-,-moz-,-ms-,-o- 的前缀简写
// 第一个参数为属性和值，第二个参数则是前缀
@mixin prefix($map, $vendors: webkit mox ms o){
	@each $prop, $value in $map{
		@if $vendors {
			@each $vendor in $vendors {
				#{'-' + $vendor + '-' + $prop}: #{$value};
			}
			// Dump regular property anyway
			#{$prop}: #{$value};
		}
	}
}
// sass:
// .element {
//  @include prefix((transform: translate(-50%, -50%)), webkit ms);
// }
// Ouput:
// .element {
//  -webkit-transform: translate(-50%, -50%);
//  -ms-transform: translate(-50%, -50%);
//  transform: translate(-50%, -50%);
// }

@mixin cf(){
	*zoom:1;
	&:before,&:after{content:"";display:table;}
	&:after{clear:both;overflow:hidden;}
}

// inline-block
@mixin ib(){
	display:inline-block;*display:inline;*zoom:1;
	vertical-align:middle;//*vertical-align:auto;
}

// 通用居中样式
// 使用见_layout.scss
@mixin imge(){
	@extend %ib;font-size:12px;font-size:1rem;line-height:normal;
	@at-root img#{&},& img{max-width:100%;max-height:100%;} //大图片等比缩小至父元素大小
}
@mixin imgc(){
	font-size:0;_line-height:0;text-align:center;overflow:hidden;
	&:before,.iecp{@extend %ib;}
	&:before,.iecp{content:"";height:100%;font-size:0;line-height:0;width:0;}
}

// 单行溢出省略
@mixin sln(){overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}

%cf{@include cf();}
%ib{@include ib();}
%imge{@include imge();}
%imgc{@include imgc();}
%sln{@include sln();}

// webkit多行溢出省略
%mln{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;}

@mixin opacity($val:0.5){
	opacity:$val;
	filter:alpha(opacity=$val*100);
}

@mixin bg($url,$width,$height:$width){
	background: url($url) no-repeat;
	background-size: 100% 100%;
	width:$width;
	height:$height;
}

@mixin size($width:auto, $height:$width){
	width:$width;
	height:$height;
}

@mixin user-select($val){
	@include prefix((user-select:$val), webkit moz);
}

@mixin box-sizing($mode:content-box){
	@include prefix((box-sizing:$mode), webkit moz);
}
@mixin boxSizing($mode:content-box){
	@include box-sizing($mode);
}

@mixin border-radius($n:0){
	@include prefix((border-radius:$n));
}
@mixin borderRadius($n:0){
	@include border-radius($n);
}
@mixin border-top-left-radius($n:0){
	@include prefix((border-top-left-radius:$n));
}
@mixin border-top-right-radius($n:0){
	@include prefix((border-top-right-radius:$n));
}
@mixin border-bottom-left-radius($n:0){
	@include prefix((border-bottom-left-radius:$n));
}
@mixin border-bottom-right-radius($n:0){
	@include prefix((border-bottom-right-radius:$n));
}

// position
// 使用：@include relative(top 1px left 1px)--->position:relative;left:1px;top:1px;
@mixin position($position,$args){
	@each $o in top right bottom left {
		$i: index($args, $o);
		@if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
			#{$o}: nth($args, $i + 1);
		}
	}
	position:unquote($position);
}
@mixin absolute($args:null){
	@include position("absolute", $args);
}
@mixin fixed($args:null){
	@include position("fixed", $args);
}
@mixin relative($args:null){
	@include position("relative", $args);
}
@mixin flex(){
	box-sizing: border-box;
	display: -webkit-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	-webkit-justify-content: space-between;
	justify-content: space-between;
	-webkit-box-align: center;
	-ms-flex-align: center;
	-webkit-align-items: center;
	align-items: center;
}
// 例：
// sass
// .element {
// 	@include absolute(top 0 left 1em);
// }
// Ouput
// .element {
// 	position: absolute;
// 	top: 0;
// 	left: 1em;
// }

@mixin button($width, $height, $bgcolor:transparent){
	@include size($width, $height);@include user-select(none);background:$bgcolor;
	&:hover{background-color:lighten($bgcolor, 5%);}
	&:active{background-color:darken($bgcolor, 5%);outline:thin dotted;outline-offset:-2px;}
}
